/*
ğŸ”¹ Approach (Insertion Sort):
Build the sorted array one element at a time by picking elements and placing them
in their correct position relative to the already sorted left part.

ğŸ”¹ Time Complexity:
- Worst Case: O(nÂ²)
- Average: O(nÂ²)
- Best Case: O(n) (already sorted)

ğŸ”¹ Space Complexity:
O(1)  (in-place)

ğŸ”¹ Stable: âœ… Yes
*/
#include <bits/stdc++.h>
using namespace std;

void insertionSort(vector<int>& arr) {
    int n = arr.size();
    for(int i = 1; i < n; i++) {
        int key = arr[i];
        int j = i - 1;

        // Shift elements to make space for key
        while(j >= 0 && arr[j] > key) {
            arr[j + 1] = arr[j];
            j--;
        }
        arr[j + 1] = key;
    }
}
