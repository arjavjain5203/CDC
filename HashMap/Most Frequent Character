/**
--------------------------------------------------------------------
âœ… Problem: Maximum Occurring Character (GFG / Coding Interview)

Given a string `s`, find the character that appears the most number of times.  
If multiple characters have the same frequency, return the one that appears first in **lexicographical order**.

--------------------------------------------------------------------
âœ… Approach: Frequency Counting using Array

ðŸ’¡ **Idea:**
- Maintain a frequency array of size 26 (for lowercase English letters).
- Iterate through the string and count occurrences.
- Traverse the frequency array to find the character with the maximum frequency.
- If multiple characters have the same frequency, return the smallest lexicographically.

--------------------------------------------------------------------
âœ… Implementation:
*/

class Solution {
public:
    char getMaxOccuringChar(string& s) {
        vector<int> count(26, 0); // frequency array

        // âœ… Step 1: Count frequencies
        for (char c : s) {
            count[c - 'a']++;
        }

        int maxFreq = -1;
        char res = 0;

        // âœ… Step 2: Find character with highest frequency
        for (int i = 0; i < 26; i++) {
            if (count[i] > maxFreq) {
                maxFreq = count[i];
                res = 'a' + i;
            }
        }

        return res;
    }
};

/**
--------------------------------------------------------------------
âœ… Dry Run Example:

Input:
s = "testsample"

Frequency Table:
t â†’ 2  
e â†’ 2  
s â†’ 2  
a â†’ 1  
m â†’ 1  
p â†’ 1  
l â†’ 1  

Output: 'e'

Explanation:
Characters 't', 'e', and 's' appear 2 times,  
but 'e' comes first lexicographically.

--------------------------------------------------------------------
âœ… Time Complexity:
O(n + 26) â†’ O(n)
  - Counting characters: O(n)
  - Finding max: O(26)

âœ… Space Complexity:
O(1)
  - Fixed-size frequency array (26)

âœ… Concepts Used:
- Arrays
- Character Frequency
- Lexicographical Comparison

âœ… Edge Cases:
- All unique characters â†’ returns smallest lexicographically
- String with one character â†’ returns that character
--------------------------------------------------------------------
